{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","tableBody","tableRows","querySelectorAll","sortColumnWithtWords","indexOfColumn","arrayWithSortedItems","sort","a","b","arg1","children","innerHTML","arg2","localeCompare","item","append","sortColumnWithNumbers","convertIntoNumber","arrayWithStrings","removeSign","replace","arrayWithNumrers","Number","slice","addEventListener","occurrent","target","cellIndex"],"mappings":"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","file":"main.bd26fce3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst tableRows = tableBody.querySelectorAll('tr');\n\ntableHead.addEventListener('click', (occurrent) => {\n  const indexOfColumn = occurrent.target.cellIndex;\n\n  if (!tableHead.children) {\n    return;\n  }\n\n  switch (indexOfColumn) {\n    case 0:\n    case 1:\n      sortColumnWithtWords(indexOfColumn);\n      break;\n    case 2:\n    case 3: sortColumnWithNumbers(indexOfColumn);\n      break;\n  }\n});\n\nfunction sortColumnWithtWords(indexOfColumn) {\n  const arrayWithSortedItems = [ ...tableRows ].sort((a, b) => {\n    const arg1 = a.children[indexOfColumn].innerHTML;\n    const arg2 = b.children[indexOfColumn].innerHTML;\n\n    return arg1.localeCompare(arg2);\n  });\n\n  for (const item of arrayWithSortedItems) {\n    tableBody.append(item);\n  }\n}\n\nfunction sortColumnWithNumbers(indexOfColumn) {\n  const arrayWithSortedItems = [ ...tableRows ].sort((a, b) => {\n    const arg1 = a.children[indexOfColumn].innerHTML;\n    const arg2 = b.children[indexOfColumn].innerHTML;\n\n    if (indexOfColumn === 3) {\n      return convertIntoNumber(arg1) - convertIntoNumber(arg2);\n    }\n\n    return +arg1 - (+arg2);\n  });\n\n  for (const item of arrayWithSortedItems) {\n    tableBody.append(item);\n  }\n}\n\nfunction convertIntoNumber(arrayWithStrings) {\n  const removeSign = arrayWithStrings.replace(',', '');\n  const arrayWithNumrers = Number(removeSign.slice(1));\n\n  return arrayWithNumrers;\n}\n"]}